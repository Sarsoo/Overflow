@using Overflow.SouthernWater
@rendermode RenderMode.InteractiveAuto

@if (Job == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <RadzenDataGrid Data="@Job.Spills" TItem="Spill"
                    AllowFiltering="true"
                    AllowColumnResize="true"
                    AllowSorting="true"
                    PageSize="25"
                    AllowPaging="true"
                    ShowPagingSummary="true"
                    >
        <Columns>
            @if (ShowIds)
            {
                <RadzenDataGridColumn TItem="Spill" Property="sw_id" Title="Id"/>
                <RadzenDataGridColumn TItem="Spill" Property="eventId" Title="Event Id"/>
                <RadzenDataGridColumn TItem="Spill" Property="siteUnitNumber" Title="Site Unit Number"/>
                <RadzenDataGridColumn TItem="Spill" Property="associatedSiteId" Title="Associated Site Id"/>
                <RadzenDataGridColumn TItem="Spill" Property="overFlowSiteId" Title="OverFlow Site Id"/>
            }
            <RadzenDataGridColumn TItem="Spill" Property="bathingSite" Title="Bathing Site"/>
            <RadzenDataGridColumn TItem="Spill" Property="outfallName" Title="Outfall"/>
            <RadzenDataGridColumn TItem="Spill" Property="eventStart" Title="Event Start"/>
            <RadzenDataGridColumn TItem="Spill" Property="eventStop" Title="Event End"/>
            <RadzenDataGridColumn TItem="Spill" Property="duration" Title="Duration"/>
            <RadzenDataGridColumn TItem="Spill" Property="status" Title="Status"/>
            <RadzenDataGridColumn TItem="Spill" Property="isImpacting" Title="Is Impacting"/>
        </Columns>
    </RadzenDataGrid>
}

@code {
    [Parameter] public SouthernWaterApiJob? Job { get; set; }
    [Parameter] public bool ShowIds { get; set; }
}