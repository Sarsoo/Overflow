name: ci

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.arch }}
    name: Build & Unit Test
    strategy:
      matrix:
        dotnet-version: [ '9.0.x' ]
        arch: ['ubuntu-latest']

    steps:
      - uses: actions/checkout@v4
        with: 
          github-server-url: https://gitea.sheep-ghoul.ts.net
          
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install WASM Workload
        run: dotnet workload install wasm-tools
      - name: Install Dependencies
        run: dotnet restore Overflow.sln
      - name: Build
        run: dotnet build --configuration Debug --no-restore Overflow.sln
      - name: Test
        run: dotnet test --no-restore --verbosity normal Overflow.sln

  build-Docker:

    runs-on: ubuntu-latest
    name: Build Container (amd64)
    needs: [build] # for ignoring bad builds
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))

    steps:
      - uses: actions/checkout@v4
        with: 
          github-server-url: https://gitea.sheep-ghoul.ts.net

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: gitea.sheep-ghoul.ts.net
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Web Container
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: gitea.sheep-ghoul.ts.net/sarsoo/overflow:latest-amd64
          file: Dockerfile
          context: .

  # build-Docker-Arm:

  #   runs-on: ubuntu-latest-arm
  #   name: Build Container (arm64)
  #   needs: [build] # for ignoring bad builds
  #   if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))

  #   steps:
  #     - uses: actions/checkout@v4
  #       with: 
  #         github-server-url: https://gitea.sheep-ghoul.ts.net

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         registry: gitea.sheep-ghoul.ts.net
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build Web Container
  #       uses: docker/build-push-action@v5
  #       with:
  #         push: true
  #         tags: gitea.sheep-ghoul.ts.net/sarsoo/overflow:latest-arm64
  #         file: Dockerfile
  #         context: .

  packageManifest:
    runs-on: ubuntu-latest
    name: Container Manifest
    needs: [ build-Docker, build-Docker-Arm ] # for ignoring bad builds
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
        with:
          github-server-url: https://gitea.sheep-ghoul.ts.net

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: gitea.sheep-ghoul.ts.net
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@master # or use a pinned version in the Releases tab
        with:
            inputs: gitea.sheep-ghoul.ts.net/sarsoo/overflow:latest
            images: gitea.sheep-ghoul.ts.net/sarsoo/overflow:latest-amd64
            # images: gitea.sheep-ghoul.ts.net/sarsoo/overflow:latest-amd64,gitea.sheep-ghoul.ts.net/sarsoo/overflow:latest-arm64
            push: true

  publish:
    runs-on: ubuntu-latest
    name: Publish Charts
    needs: [build] # for ignoring bad builds
    if: gitea.event_name == 'push' && (gitea.ref == 'refs/heads/master' || startsWith(gitea.ref, 'refs/tags/'))

    steps:
      - uses: actions/checkout@v4
        with:
          github-server-url: https://gitea.sheep-ghoul.ts.net

      - uses: azure/setup-helm@v4.2.0

      - name: Package Chart
        run: helm package -u charts/overflow

      - name: Push Chart
        run: curl --user ${{ secrets.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_TOKEN }} -X POST --upload-file ./overflow-*.tgz https://gitea.sheep-ghoul.ts.net/api/packages/${{ secrets.DOCKERHUB_USERNAME }}/helm/api/charts